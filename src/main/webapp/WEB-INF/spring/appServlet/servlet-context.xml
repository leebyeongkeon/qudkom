<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
			 xmlns:aop="http://www.springframework.org/schema/aop"

			 xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/aop
	   http://www.springframework.org/schema/aop/spring-aop.xsd
">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<annotation-driven/>
	<!-- Enables the Spring MVC @Controller programming model -->


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->

<!--	<context:property-placeholder system-properties-mode="ENVIRONMENT"/>-->

	<resources mapping="/temp/**" location="file:///#{systemProperties['user.home']}/temp/"/>
	<resources mapping="/upload/**" location="file:///#{systemProperties['user.home']}/upload/"/>

	<!--	<resources mapping="/temp/**" location="file:////home/tomcat/upload/temp/"/>-->
	<!--	<resources mapping="/v/**" location="file:////home/tomcat/upload/"/>-->

	<!--	<resources mapping="/temp/**" location="file:///C:/Dev/upload/temp/"/>-->
	<!--	<resources mapping="/v/**" location="file:///C:/Dev/upload/"/>-->

		<resources mapping="/**" location="/resources/"/>
<!--	<resources mapping="/js/**" location="/resources/js/"/>-->
<!--	<resources mapping="/css/**" location="/resources/css/"/>-->
<!--	<resources mapping="/images/**" location="/resources/images/"/>-->



	<context:component-scan base-package="com.qudkom.web" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
<!--		<context:include-filter type="regex" expression="com.qudkom.web.aop.*"/>-->
	</context:component-scan>

	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>

<!--	<beans:bean id="exceptionHandlerExceptionResolver"-->
<!--				class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" />-->


<!--	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">-->
<!--		<beans:property name="basenames">-->
<!--			<beans:list>-->
<!--				<beans:value>userinfo_error_message</beans:value>-->
<!--			</beans:list>-->
<!--		</beans:property>-->
<!--		<beans:property name="defaultEncoding" value="UTF-8"/>-->
<!--	</beans:bean>-->
<!--	<beans:bean id="messageSourceAccessor" class="org.springframework.context.support.MessageSourceAccessor">-->
<!--		<beans:constructor-arg ref="messageSource"/>-->
<!--	</beans:bean>-->

<!--	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
		<beans:property name="resolveLazily" value="true"></beans:property>
<!--		<beans:property name="maxUploadSize" value="20971520"></beans:property>-->
<!--		<beans:property name="maxInMemorySize" value="10485760"></beans:property>-->
	</beans:bean>

	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans:beans>
